{"mappings":"gfAAA,IAAAA,EAAAC,EAAA,SAEMC,EAAOC,SAASC,cAAc,SAEhCC,EAAa,KACbC,EAAY,KACZC,EAAc,KAElB,SAASC,EAAcC,EAAUC,GAC/B,OAAO,IAAIC,SAAQ,SAACC,EAASC,GAC3B,IAAMC,EAAgBC,KAAKC,SAAW,GAEtCC,YAAW,WACLH,EACFF,EAAQ,CAAEH,WAAUC,UAEpBG,EAAO,CAAEJ,WAAUC,YAEpBA,MAIPR,EAAKgB,iBAAiB,UAEtB,SAAkCC,GAChCA,EAAMC,iBAEN,IAEuBC,EAAnBF,EAAMG,cADRC,SAAiBF,EAALX,MAAWW,EAAJG,KAAYH,EAANI,OAG3BpB,EAAac,EAAMG,cAAcZ,MAAMgB,MACvCpB,EAAYa,EAAMG,cAAcE,KAAKE,MACrCnB,EAAcY,EAAMG,cAAcG,OAAOC,MAEzClB,EAAc,EAAGH,GACdsB,MAAK,SAAAC,G,IAAGnB,EAAQmB,EAARnB,SAAUC,EAAKkB,EAALlB,MACjBV,EAAA6B,OAAOC,QAAQ,uBAAwCC,OAAftB,EAAS,QAAYsB,OAANrB,EAAM,UAE9DsB,OAAM,SAAAJ,G,IAAGnB,EAAQmB,EAARnB,SAAUC,EAAKkB,EAALlB,MAClBV,EAAA6B,OAAOI,QAAQ,sBAAuCF,OAAftB,EAAS,QAAYsB,OAANrB,EAAM,UAGhE,IAAK,IAAIwB,EAAI,EAAGA,GAAK3B,EAAa2B,GAAK,EACrC7B,EAAa8B,SAAS9B,EAAY,IAAM8B,SAAS7B,EAAW,IAC5DE,EAAc0B,EAAG7B,GACdsB,MAAK,SAAAC,G,IAAGnB,EAAQmB,EAARnB,SAAUC,EAAKkB,EAALlB,MACjBV,EAAA6B,OAAOC,QAAQ,uBAAwCC,OAAftB,EAAS,QAAYsB,OAANrB,EAAM,UAE9DsB,OAAM,SAAAJ,G,IAAGnB,EAAQmB,EAARnB,SAAUC,EAAKkB,EAALlB,MAClBV,EAAA6B,OAAOI,QAAQ,sBAAqCF,OAAftB,EAAS,QAAYsB,OAANrB,EAAM,UAIhES,EAAMG,cAAcc,W","sources":["src/js/03-promises.js"],"sourcesContent":["import { Notify } from 'notiflix/build/notiflix-notify-aio';\n\nconst form = document.querySelector('.form');\n\nlet delayValue = null;\nlet stepValue = null;\nlet amountValue = null;\n\nfunction createPromise(position, delay) {\n  return new Promise((resolve, reject) => {\n    const shouldResolve = Math.random() > 0.3;\n\n    setTimeout(() => {\n      if (shouldResolve) {\n        resolve({ position, delay });\n      } else {\n        reject({ position, delay });\n      }\n    }, delay);\n  });\n}\n\nform.addEventListener('submit', submitingOfCreatePromise);\n\nfunction submitingOfCreatePromise(event) {\n  event.preventDefault();\n\n  const {\n    elements: { delay, step, amount },\n  } = event.currentTarget;\n\n  delayValue = event.currentTarget.delay.value;\n  stepValue = event.currentTarget.step.value;\n  amountValue = event.currentTarget.amount.value;\n\n  createPromise(1, delayValue)\n    .then(({ position, delay }) => {\n      Notify.success(`✅ Fulfilled promise ${position} in ${delay}ms`);\n    })\n    .catch(({ position, delay }) => {\n      Notify.failure(`❌ Rejected promise ${position} in ${delay}ms`);\n    });\n\n  for (let i = 2; i <= amountValue; i += 1) {\n    delayValue = parseInt(delayValue, 10) + parseInt(stepValue, 10);\n    createPromise(i, delayValue)\n      .then(({ position, delay }) => {\n        Notify.success(`✅ Fulfilled promise ${position} in ${delay}ms`);\n      })\n      .catch(({ position, delay }) => {\n        Notify.failure(`❌ Rejected promise ${position} in ${delay}ms`);\n      });\n  }\n\n  event.currentTarget.reset();\n}\n"],"names":["$h6c0i","parcelRequire","$ce04d3a99e08e73b$var$form","document","querySelector","$ce04d3a99e08e73b$var$delayValue","$ce04d3a99e08e73b$var$stepValue","$ce04d3a99e08e73b$var$amountValue","$ce04d3a99e08e73b$var$createPromise","position","delay","Promise","resolve","reject","shouldResolve","Math","random","setTimeout","addEventListener","event","preventDefault","_elements","currentTarget","elements","step","amount","value","then","param","Notify","success","concat","catch","failure","i","parseInt","reset"],"version":3,"file":"03-promises.8ec27ace.js.map"}